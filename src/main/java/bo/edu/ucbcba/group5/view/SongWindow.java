package bo.edu.ucbcba.group5.view;

import bo.edu.ucbcba.group5.controller.MusicController;
import bo.edu.ucbcba.group5.exceptions.ValidationException;
import bo.edu.ucbcba.group5.model.Musica;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.validation.groups.ConvertGroup;
import javax.validation.groups.Default;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

/**
 * Created by Christian on 01/06/2016.
 */
public class SongWindow extends JDialog {
    private JPanel rootPanel;
    private JButton buscarMusicaButton;
    private JTable resulTable;
    private JButton actualizarButton;
    private JButton eliminarButton;
    private JTextField nameField1;
    private DefaultTableModel model;
    private MusicController musicController;

    SongWindow(MusicForm parent) {
        super(parent, "Canciones", true);
        setContentPane(rootPanel);
        setSize(1600, 1400);
        pack();
        setResizable(true);
        musicController = new MusicController();
        populateTable();
        buscarMusicaButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                populateTable();
            }
        });
        eliminarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                deleteElem();
            }
        });

        resulTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent mouseEvent) {
                super.mouseClicked(mouseEvent);
                nameField1.setText((String) model.getValueAt(resulTable.getSelectedRow(), 0));
            }
        });
    }

    private void Clean() {
        nameField1.setText("");
    }

    private void populateTable() {
        List<Musica> elementos = musicController.BuscarMovies(nameField1.getText());
        model = new DefaultTableModel();
        // model.addColumn("Id");
        model.addColumn("nombre");
        model.addColumn("cancion 1");
        model.addColumn("cancion 2");
        model.addColumn("cancion 3");
        model.addColumn("cancion 4");
        model.addColumn("cancion 5");
        model.addColumn("cancion 6");
        model.addColumn("cancion 7");
        model.addColumn("cancion 8");
        model.addColumn("cancion 9");
        model.addColumn("cancion 10");
        model.addColumn("cancion 11");
        model.addColumn("cancion 12");

        resulTable.setModel(model);

        for (Musica m : elementos) {
            Object[] row = new Object[20];
            // row[0] = m.getId();
            row[0] = m.getNombre();
            row[1] = m.getSong1();
            row[2] = m.getSong2();
            row[3] = m.getSong3();
            row[4] = m.getSong4();
            row[5] = m.getSong5();
            row[6] = m.getSong6();
            row[7] = m.getSong7();
            row[8] = m.getSong8();
            row[9] = m.getSong9();
            row[10] = m.getSong10();
            row[11] = m.getSong11();
            row[12] = m.getSong12();

            model.addRow(row);
        }
        Clean();

    }

    public void deleteElem() {

        DefaultTableModel model = (DefaultTableModel) resulTable.getModel();
        String cod = (String) model.getValueAt(resulTable.getSelectedRow(), 0);
        musicController.delete(cod);
        JOptionPane.showMessageDialog(this, "Album eliminado correctamente", "Realizado", JOptionPane.INFORMATION_MESSAGE);
        populateTable();
    }

    private void cancel() {
        setVisible(false);
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        buscarMusicaButton = new JButton();
        buscarMusicaButton.setText("Buscar Album");
        rootPanel.add(buscarMusicaButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        resulTable = new JTable();
        rootPanel.add(resulTable, new GridConstraints(1, 1, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(850, 350), null, 0, false));
        actualizarButton = new JButton();
        actualizarButton.setText("Actualizar");
        rootPanel.add(actualizarButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        eliminarButton = new JButton();
        eliminarButton.setText("Eliminar");
        rootPanel.add(eliminarButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nameField1 = new JTextField();
        rootPanel.add(nameField1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
